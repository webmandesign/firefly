/* FILE: main/sidebar/__footer.scss */

//
// Footer widgets area
//





//
// Footer columns helper mixin
//
// @param  int $c   Max columns count allowed in the footer on largets device
// @param  int $g   Gutter size in %
// @param  int $bc  Max columns count allowed for the device when mixin used in responsive media query
//
@mixin footer_columns( $c: 5, $g: 8, $bc: 5 ) {

	@for $i from 2 through $c { // Starting from 2 as columns count depends on number of widgets in area too

		&.columns-#{$i} {

			$cols: $i;

			@if $cols > $bc {
				$cols: $bc;
			}

			.widget {
				width: percentage( ( 100 + $g ) / $cols / 100 );

				// second item (first-child is a sidebar title)
				&:nth-child(2),
				// every last column in row (first-child compensation)
				&:nth-child(#{$cols}n+1),
				// every first column in row (first-child compensation)
				&:nth-child(#{$cols}n+2) {
					width: percentage( ( ( 100 + $g ) / $cols - $g / 2 ) / 100 );
				}

				&:nth-child(#{$cols}n+2) {
					padding-left: 0;
				}

				&:nth-child(#{$cols}n+1) {
					padding-right: 0;

					&::before {
						display: none;
					}

				}

				&:nth-child(#{$cols}n+2) {
					clear: left; // Flexbox fallback
				}

			}

		}

	}

} // /footer_columns



.site-footer-area-inner {
	@extend .clearfix;
}

.footer-widgets {
	@extend .clearfix; // Flexbox fallback
	display: flex;
	flex-wrap: wrap;
	margin-bottom: -1px;

	&-inner {
		padding-top: $golden +em;
		padding-bottom: $golden +em;

		@include responsive( map_get( $breakpoint, 'm' ) ) {
			padding-top: 0;
			padding-bottom: 0;
		}

	}

	.widget {
		float: left; // Flexbox fallback
		flex-shrink: 1; // IE10 required on flex children
		position: relative;
		width: 100%; // Fallback for 1 column
		padding: ( $golden +rem ) 0;
		margin: 0;

		@include responsive( map_get( $breakpoint, 'm' ) ) {
			padding: ( power( $golden, 2 ) +rem ) percentage( 4 / 100 );
		}

		@include responsive( map_get( $breakpoint, 'l' ) ) {
			padding-top: $column_padding_vertical;
			padding-bottom: $column_padding_vertical;
		}

		li,
		table {
			border-color: inherit;
		}

		@include responsive( map_get( $breakpoint, 'm' ) ) {

			// Widget borders - using pseudo elements to prevent wrong border color inheritance on nested elements

			&::after,
			&::before {
				content: '';
				position: absolute;
				display: block;
				right: 0;
			}

			&::after {
				width: 100%;
				height: 0;
				bottom: 0;
				border-top: 1px dashed;
			}

			&::before {
				width: 0;
				height: 100%;
				top: 0;
				border-left: 1px dashed;
			}

		}

	}

	// Multiple columns layouts

		$columns: 5; // max columns count
		$gutter: 8; // %

		@include responsive_minmax( map_get( $breakpoint, 'm' ), map_get( $breakpoint, 'l' ) ) {

			@include footer_columns( $columns, $gutter, 3 );

		}

		@include responsive_minmax( map_get( $breakpoint, 'l' ), map_get( $breakpoint, 'xl' ) ) {

			@include footer_columns( $columns, $gutter / 2, 5 ); // Yes, still 5 columns to prevent orphans, but lowering the gutter

		}

		@include responsive( map_get( $breakpoint, 'xl' ) ) {

			@include footer_columns( $columns, $gutter, 5 );

		}

		.screen-reader-text + .widget {
			padding-left: 0;
		}

}
